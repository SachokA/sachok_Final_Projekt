<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-30T17:01:45 EEST" name="Run all tests" finished-at="2023-07-30T17:03:37 EEST" duration-ms="111852">
    <groups>
    </groups>
    <test started-at="2023-07-30T17:01:45 EEST" name="Test 1" finished-at="2023-07-30T17:03:37 EEST" duration-ms="111852">
      <class name="SortingCheck">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SortingCheck@2f98635e]" started-at="2023-07-30T17:03:02 EEST" name="setUp" finished-at="2023-07-30T17:03:10 EEST" duration-ms="8118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sortingCheck()[pri:0, instance:SortingCheck@2f98635e]" started-at="2023-07-30T17:03:10 EEST" name="sortingCheck" finished-at="2023-07-30T17:03:13 EEST" duration-ms="2925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortingCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:SortingCheck@2f98635e]" started-at="2023-07-30T17:03:13 EEST" name="tearDown" finished-at="2023-07-30T17:03:14 EEST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortingCheck status=SUCCESS method=SortingCheck.sortingCheck()[pri:0, instance:SortingCheck@2f98635e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SortingCheck -->
      <class name="CheckLanguages">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckLanguages@624a24f6]" started-at="2023-07-30T17:02:20 EEST" name="setUp" finished-at="2023-07-30T17:02:30 EEST" duration-ms="10131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkLanguages()[pri:0, instance:CheckLanguages@624a24f6]" started-at="2023-07-30T17:02:30 EEST" name="checkLanguages" finished-at="2023-07-30T17:02:32 EEST" duration-ms="1494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLanguages -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckLanguages@624a24f6]" started-at="2023-07-30T17:02:32 EEST" name="tearDown" finished-at="2023-07-30T17:02:32 EEST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLanguages status=SUCCESS method=CheckLanguages.checkLanguages()[pri:0, instance:CheckLanguages@624a24f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckLanguages -->
      <class name="SubscribeWithInvalidEmail">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SubscribeWithInvalidEmail@49c8f6e8]" started-at="2023-07-30T17:03:14 EEST" name="setUp" finished-at="2023-07-30T17:03:25 EEST" duration-ms="11823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSubscribeWithInvalidEmail()[pri:0, instance:SubscribeWithInvalidEmail@49c8f6e8]" started-at="2023-07-30T17:03:25 EEST" name="checkSubscribeWithInvalidEmail" finished-at="2023-07-30T17:03:26 EEST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSubscribeWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:SubscribeWithInvalidEmail@49c8f6e8]" started-at="2023-07-30T17:03:26 EEST" name="tearDown" finished-at="2023-07-30T17:03:26 EEST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSubscribeWithInvalidEmail status=SUCCESS method=SubscribeWithInvalidEmail.checkSubscribeWithInvalidEmail()[pri:0, instance:SubscribeWithInvalidEmail@49c8f6e8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SubscribeWithInvalidEmail -->
      <class name="CheckPopularProducts">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckPopularProducts@6b00ad9]" started-at="2023-07-30T17:02:31 EEST" name="setUp" finished-at="2023-07-30T17:02:46 EEST" duration-ms="14661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkPopularProducts()[pri:0, instance:CheckPopularProducts@6b00ad9]" started-at="2023-07-30T17:02:46 EEST" name="checkPopularProducts" finished-at="2023-07-30T17:02:47 EEST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPopularProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckPopularProducts@6b00ad9]" started-at="2023-07-30T17:02:47 EEST" name="tearDown" finished-at="2023-07-30T17:02:47 EEST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPopularProducts status=SUCCESS method=CheckPopularProducts.checkPopularProducts()[pri:0, instance:CheckPopularProducts@6b00ad9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckPopularProducts -->
      <class name="CheckoutEndToEnd">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckoutEndToEnd@7afbf561]" started-at="2023-07-30T17:02:55 EEST" name="setUp" finished-at="2023-07-30T17:03:05 EEST" duration-ms="10425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkoutEndToEnd()[pri:0, instance:CheckoutEndToEnd@7afbf561]" started-at="2023-07-30T17:03:05 EEST" name="checkoutEndToEnd" finished-at="2023-07-30T17:03:36 EEST" duration-ms="30999" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[EdgeDriver: msedge on windows (14fffbe916e5f404d0478076b4bf5db1)] -> xpath: //*[@id='customer-form']/footer/button] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 115.0.1901.188, ms:edgeOptions: {debuggerAddress: localhost:55969}, msedge: {msedgedriverVersion: 115.0.1901.188 (b51b39339c4..., userDataDir: C:\Users\Aguka\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55969/devtoo..., se:cdpVersion: 115.0.1901.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 14fffbe916e5f404d0478076b4bf5db1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[EdgeDriver: msedge on windows (14fffbe916e5f404d0478076b4bf5db1)] -> xpath: //*[@id='customer-form']/footer/button] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 115.0.1901.188, ms:edgeOptions: {debuggerAddress: localhost:55969}, msedge: {msedgedriverVersion: 115.0.1901.188 (b51b39339c4..., userDataDir: C:\Users\Aguka\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55969/devtoo..., se:cdpVersion: 115.0.1901.188, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 14fffbe916e5f404d0478076b4bf5db1
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:230)
at pages.BasePage.waitUntilPresent(BasePage.java:25)
at pages.ResultSearchPage.clickButtonContinueAddresses(ResultSearchPage.java:256)
at CheckoutEndToEnd.checkoutEndToEnd(CheckoutEndToEnd.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkoutEndToEnd -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckoutEndToEnd@7afbf561]" started-at="2023-07-30T17:03:36 EEST" name="tearDown" finished-at="2023-07-30T17:03:37 EEST" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkoutEndToEnd status=FAILURE method=CheckoutEndToEnd.checkoutEndToEnd()[pri:0, instance:CheckoutEndToEnd@7afbf561] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckoutEndToEnd -->
      <class name="AddingToCart">
        <test-method is-config="true" signature="setUp()[pri:0, instance:AddingToCart@27ace0b1]" started-at="2023-07-30T17:01:45 EEST" name="setUp" finished-at="2023-07-30T17:02:25 EEST" duration-ms="39953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addingToCart()[pri:0, instance:AddingToCart@27ace0b1]" started-at="2023-07-30T17:02:25 EEST" name="addingToCart" finished-at="2023-07-30T17:02:30 EEST" duration-ms="5615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:AddingToCart@27ace0b1]" started-at="2023-07-30T17:02:30 EEST" name="tearDown" finished-at="2023-07-30T17:02:31 EEST" duration-ms="823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addingToCart status=SUCCESS method=AddingToCart.addingToCart()[pri:0, instance:AddingToCart@27ace0b1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AddingToCart -->
      <class name="PriceDropCheck">
        <test-method is-config="true" signature="setUp()[pri:0, instance:PriceDropCheck@338cc75f]" started-at="2023-07-30T17:02:32 EEST" name="setUp" finished-at="2023-07-30T17:02:44 EEST" duration-ms="12204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="priceDropCheck()[pri:0, instance:PriceDropCheck@338cc75f]" started-at="2023-07-30T17:02:44 EEST" name="priceDropCheck" finished-at="2023-07-30T17:02:45 EEST" duration-ms="1158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priceDropCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:PriceDropCheck@338cc75f]" started-at="2023-07-30T17:02:45 EEST" name="tearDown" finished-at="2023-07-30T17:02:46 EEST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priceDropCheck status=SUCCESS method=PriceDropCheck.priceDropCheck()[pri:0, instance:PriceDropCheck@338cc75f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- PriceDropCheck -->
      <class name="RegistrationWithInvalidData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithInvalidData@4f453e63]" started-at="2023-07-30T17:02:46 EEST" name="setUp" finished-at="2023-07-30T17:02:53 EEST" duration-ms="6862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithInvalidData@4f453e63]" started-at="2023-07-30T17:02:53 EEST" name="registrationWithValidData" finished-at="2023-07-30T17:02:54 EEST" duration-ms="1887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:RegistrationWithInvalidData@4f453e63]" started-at="2023-07-30T17:02:54 EEST" name="tearDown" finished-at="2023-07-30T17:02:55 EEST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registrationWithValidData status=SUCCESS method=RegistrationWithInvalidData.registrationWithValidData()[pri:0, instance:RegistrationWithInvalidData@4f453e63] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithInvalidData -->
      <class name="RegistrationWithValidData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithValidData@7c9bdee9]" started-at="2023-07-30T17:02:47 EEST" name="setUp" finished-at="2023-07-30T17:02:59 EEST" duration-ms="12344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithValidData@7c9bdee9]" started-at="2023-07-30T17:02:59 EEST" name="registrationWithValidData" finished-at="2023-07-30T17:03:02 EEST" duration-ms="2623" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:RegistrationWithValidData@7c9bdee9]" started-at="2023-07-30T17:03:02 EEST" name="tearDown" finished-at="2023-07-30T17:03:02 EEST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registrationWithValidData status=SUCCESS method=RegistrationWithValidData.registrationWithValidData()[pri:0, instance:RegistrationWithValidData@7c9bdee9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithValidData -->
      <class name="CheckCategories">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckCategories@53a5e217]" started-at="2023-07-30T17:01:45 EEST" name="setUp" finished-at="2023-07-30T17:02:19 EEST" duration-ms="34369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkCategories()[pri:0, instance:CheckCategories@53a5e217]" started-at="2023-07-30T17:02:19 EEST" name="checkCategories" finished-at="2023-07-30T17:02:20 EEST" duration-ms="664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCategories -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckCategories@53a5e217]" started-at="2023-07-30T17:02:20 EEST" name="tearDown" finished-at="2023-07-30T17:02:20 EEST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCategories status=SUCCESS method=CheckCategories.checkCategories()[pri:0, instance:CheckCategories@53a5e217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckCategories -->
    </test> <!-- Test 1 -->
  </suite> <!-- Run all tests -->
</testng-results>
