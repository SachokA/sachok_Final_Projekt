<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-06T13:11:00 EEST" name="Run all tests" finished-at="2023-08-06T13:13:36 EEST" duration-ms="155519">
    <groups>
    </groups>
    <test started-at="2023-08-06T13:11:00 EEST" name="Test 1" finished-at="2023-08-06T13:13:36 EEST" duration-ms="155519">
      <class name="PriceDropCheckTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:PriceDropCheckTest@1aac188d]" started-at="2023-08-06T13:11:34 EEST" name="setUp" finished-at="2023-08-06T13:11:46 EEST" duration-ms="11830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="priceDropCheck()[pri:0, instance:PriceDropCheckTest@1aac188d]" started-at="2023-08-06T13:11:46 EEST" name="priceDropCheck" finished-at="2023-08-06T13:11:47 EEST" duration-ms="1281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priceDropCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:PriceDropCheckTest@1aac188d]" started-at="2023-08-06T13:11:47 EEST" name="tearDown" finished-at="2023-08-06T13:11:48 EEST" duration-ms="212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=priceDropCheck status=SUCCESS method=PriceDropCheckTest.priceDropCheck()[pri:0, instance:PriceDropCheckTest@1aac188d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- PriceDropCheckTest -->
      <class name="SortingCheckTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SortingCheckTest@62a4417]" started-at="2023-08-06T13:13:01 EEST" name="setUp" finished-at="2023-08-06T13:13:15 EEST" duration-ms="13922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sortingCheck()[pri:0, instance:SortingCheckTest@62a4417]" started-at="2023-08-06T13:13:15 EEST" name="sortingCheck" finished-at="2023-08-06T13:13:17 EEST" duration-ms="2016" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found
  (Session info: chrome=115.0.5790.170)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f1ff3889d4568db77740ec5391ae3322, findChildElement {id=46D286FC6A1DC8318464BE1B25CB5B60_element_55, using=xpath, value=.//*[@class='regular-price']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.170, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Aguka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57940}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57940/devtoo..., se:cdpVersion: 115.0.5790.170, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f1ff3889d4568db77740ec5391ae3322]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found
  (Session info: chrome=115.0.5790.170)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f1ff3889d4568db77740ec5391ae3322, findChildElement {id=46D286FC6A1DC8318464BE1B25CB5B60_element_55, using=xpath, value=.//*[@class='regular-price']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.170, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Aguka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57940}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57940/devtoo..., se:cdpVersion: 115.0.5790.170, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f1ff3889d4568db77740ec5391ae3322
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.remote.RemoteWebElement.findElement(RemoteWebElement.java:212)
at pages.AllProductsComponent.<init>(AllProductsComponent.java:26)
at pages.HomePage.getAllElementsFromPage(HomePage.java:68)
at pages.HomePage.mergeList(HomePage.java:79)
at SortingCheckTest.sortingCheck(SortingCheckTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortingCheck -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:SortingCheckTest@62a4417]" started-at="2023-08-06T13:13:17 EEST" name="tearDown" finished-at="2023-08-06T13:13:17 EEST" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sortingCheck status=FAILURE method=SortingCheckTest.sortingCheck()[pri:0, instance:SortingCheckTest@62a4417] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SortingCheckTest -->
      <class name="CheckLanguagesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckLanguagesTest@5a00eb1e]" started-at="2023-08-06T13:11:19 EEST" name="setUp" finished-at="2023-08-06T13:11:33 EEST" duration-ms="13547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkLanguages()[pri:0, instance:CheckLanguagesTest@5a00eb1e]" started-at="2023-08-06T13:11:33 EEST" name="checkLanguages" finished-at="2023-08-06T13:11:34 EEST" duration-ms="1039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLanguages -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckLanguagesTest@5a00eb1e]" started-at="2023-08-06T13:11:34 EEST" name="tearDown" finished-at="2023-08-06T13:11:34 EEST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLanguages status=SUCCESS method=CheckLanguagesTest.checkLanguages()[pri:0, instance:CheckLanguagesTest@5a00eb1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckLanguagesTest -->
      <class name="AddingToCartTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:AddingToCartTest@1816e24a]" started-at="2023-08-06T13:11:00 EEST" name="setUp" finished-at="2023-08-06T13:11:17 EEST" duration-ms="16526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addingToCart()[pri:0, instance:AddingToCartTest@1816e24a]" started-at="2023-08-06T13:11:17 EEST" name="addingToCart" finished-at="2023-08-06T13:11:23 EEST" duration-ms="6262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:AddingToCartTest@1816e24a]" started-at="2023-08-06T13:11:23 EEST" name="tearDown" finished-at="2023-08-06T13:11:23 EEST" duration-ms="184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addingToCart status=SUCCESS method=AddingToCartTest.addingToCart()[pri:0, instance:AddingToCartTest@1816e24a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AddingToCartTest -->
      <class name="SubscribeWithInvalidEmailTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SubscribeWithInvalidEmailTest@43f61afb]" started-at="2023-08-06T13:13:17 EEST" name="setUp" finished-at="2023-08-06T13:13:30 EEST" duration-ms="12386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSubscribeWithInvalidEmail()[pri:0, instance:SubscribeWithInvalidEmailTest@43f61afb]" started-at="2023-08-06T13:13:30 EEST" name="checkSubscribeWithInvalidEmail" finished-at="2023-08-06T13:13:30 EEST" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSubscribeWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:SubscribeWithInvalidEmailTest@43f61afb]" started-at="2023-08-06T13:13:30 EEST" name="tearDown" finished-at="2023-08-06T13:13:30 EEST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSubscribeWithInvalidEmail status=SUCCESS method=SubscribeWithInvalidEmailTest.checkSubscribeWithInvalidEmail()[pri:0, instance:SubscribeWithInvalidEmailTest@43f61afb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SubscribeWithInvalidEmailTest -->
      <class name="RegistrationWithValidDataTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithValidDataTest@2d23faef]" started-at="2023-08-06T13:12:04 EEST" name="setUp" finished-at="2023-08-06T13:12:17 EEST" duration-ms="12454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithValidDataTest@2d23faef]" started-at="2023-08-06T13:12:17 EEST" name="registrationWithValidData" finished-at="2023-08-06T13:12:19 EEST" duration-ms="2312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:RegistrationWithValidDataTest@2d23faef]" started-at="2023-08-06T13:12:19 EEST" name="tearDown" finished-at="2023-08-06T13:12:19 EEST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registrationWithValidData status=SUCCESS method=RegistrationWithValidDataTest.registrationWithValidData()[pri:0, instance:RegistrationWithValidDataTest@2d23faef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithValidDataTest -->
      <class name="CheckPopularProductsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckPopularProductsTest@36fcf6c0]" started-at="2023-08-06T13:11:23 EEST" name="setUp" finished-at="2023-08-06T13:11:34 EEST" duration-ms="10372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkPopularProducts()[pri:0, instance:CheckPopularProductsTest@36fcf6c0]" started-at="2023-08-06T13:11:34 EEST" name="checkPopularProducts" finished-at="2023-08-06T13:13:35 EEST" duration-ms="121173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPopularProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckPopularProductsTest@36fcf6c0]" started-at="2023-08-06T13:13:35 EEST" name="tearDown" finished-at="2023-08-06T13:13:36 EEST" duration-ms="911" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPopularProducts status=SUCCESS method=CheckPopularProductsTest.checkPopularProducts()[pri:0, instance:CheckPopularProductsTest@36fcf6c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckPopularProductsTest -->
      <class name="CheckCategoriesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckCategoriesTest@56078cea]" started-at="2023-08-06T13:11:00 EEST" name="setUp" finished-at="2023-08-06T13:11:17 EEST" duration-ms="16161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkCategories()[pri:0, instance:CheckCategoriesTest@56078cea]" started-at="2023-08-06T13:11:17 EEST" name="checkCategories" finished-at="2023-08-06T13:11:19 EEST" duration-ms="2474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCategories -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckCategoriesTest@56078cea]" started-at="2023-08-06T13:11:19 EEST" name="tearDown" finished-at="2023-08-06T13:11:19 EEST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkCategories status=SUCCESS method=CheckCategoriesTest.checkCategories()[pri:0, instance:CheckCategoriesTest@56078cea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckCategoriesTest -->
      <class name="CheckoutEndToEndTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckoutEndToEndTest@7cb8437d]" started-at="2023-08-06T13:12:19 EEST" name="setUp" finished-at="2023-08-06T13:12:29 EEST" duration-ms="9937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkoutEndToEnd()[pri:0, instance:CheckoutEndToEndTest@7cb8437d]" started-at="2023-08-06T13:12:29 EEST" name="checkoutEndToEnd" finished-at="2023-08-06T13:13:01 EEST" duration-ms="31311" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=115.0.5790.170)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e9751498bdabecde7e10072df363fc34, clickElement {id=B009F5F6C790E2ED623EF3BFAD03385A_element_154}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.170, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Aguka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57893/devtoo..., se:cdpVersion: 115.0.5790.170, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e9751498bdabecde7e10072df363fc34)] -> xpath: //*[@id='customer-form']/footer/button]
Session ID: e9751498bdabecde7e10072df363fc34]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=115.0.5790.170)
Build info: version: '4.10.0', revision: 'c14d967899'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e9751498bdabecde7e10072df363fc34, clickElement {id=B009F5F6C790E2ED623EF3BFAD03385A_element_154}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 115.0.5790.170, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Aguka\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:57893/devtoo..., se:cdpVersion: 115.0.5790.170, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e9751498bdabecde7e10072df363fc34)] -> xpath: //*[@id='customer-form']/footer/button]
Session ID: e9751498bdabecde7e10072df363fc34
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:199)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:132)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:531)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:242)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at jdk.internal.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
at pages.ResultSearchPage.clickButtonContinueAddresses(ResultSearchPage.java:266)
at CheckoutEndToEndTest.checkoutEndToEnd(CheckoutEndToEndTest.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkoutEndToEnd -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:CheckoutEndToEndTest@7cb8437d]" started-at="2023-08-06T13:13:01 EEST" name="tearDown" finished-at="2023-08-06T13:13:01 EEST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkoutEndToEnd status=FAILURE method=CheckoutEndToEndTest.checkoutEndToEnd()[pri:0, instance:CheckoutEndToEndTest@7cb8437d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckoutEndToEndTest -->
      <class name="RegistrationWithInvalidDataTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithInvalidDataTest@7026b7ee]" started-at="2023-08-06T13:11:48 EEST" name="setUp" finished-at="2023-08-06T13:12:02 EEST" duration-ms="14229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithInvalidDataTest@7026b7ee]" started-at="2023-08-06T13:12:02 EEST" name="registrationWithValidData" finished-at="2023-08-06T13:12:04 EEST" duration-ms="2310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:RegistrationWithInvalidDataTest@7026b7ee]" started-at="2023-08-06T13:12:04 EEST" name="tearDown" finished-at="2023-08-06T13:12:04 EEST" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registrationWithValidData status=SUCCESS method=RegistrationWithInvalidDataTest.registrationWithValidData()[pri:0, instance:RegistrationWithInvalidDataTest@7026b7ee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithInvalidDataTest -->
    </test> <!-- Test 1 -->
  </suite> <!-- Run all tests -->
</testng-results>
