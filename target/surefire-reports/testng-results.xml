<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-27T13:39:49 EEST" name="Run all tests" finished-at="2023-07-27T13:41:52 EEST" duration-ms="122478">
    <groups>
    </groups>
    <test started-at="2023-07-27T13:39:49 EEST" name="Test 1" finished-at="2023-07-27T13:41:52 EEST" duration-ms="122478">
      <class name="SortingCheck">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SortingCheck@67c27493]" started-at="2023-07-27T13:41:27 EEST" name="setUp" finished-at="2023-07-27T13:41:38 EEST" duration-ms="11838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sortingCheck()[pri:0, instance:SortingCheck@67c27493]" started-at="2023-07-27T13:41:38 EEST" name="sortingCheck" finished-at="2023-07-27T13:41:41 EEST" duration-ms="2084" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Lists differ at element [0]: Brown Bear Cushion != Hummingbird Printed T-Shirt expected [Brown Bear Cushion] but found [Hummingbird Printed T-Shirt]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Lists differ at element [0]: Brown Bear Cushion != Hummingbird Printed T-Shirt expected [Brown Bear Cushion] but found [Hummingbird Printed T-Shirt]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at SortingCheck.sortingCheck(SortingCheck.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sortingCheck -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:SortingCheck@67c27493]" started-at="2023-07-27T13:41:41 EEST" name="tearDown" finished-at="2023-07-27T13:41:41 EEST" duration-ms="163" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SortingCheck -->
      <class name="CheckLanguages">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckLanguages@6069db50]" started-at="2023-07-27T13:40:24 EEST" name="setUp" finished-at="2023-07-27T13:40:38 EEST" duration-ms="13796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkLanguages()[pri:0, instance:CheckLanguages@6069db50]" started-at="2023-07-27T13:40:38 EEST" name="checkLanguages" finished-at="2023-07-27T13:40:38 EEST" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLanguages -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CheckLanguages@6069db50]" started-at="2023-07-27T13:40:38 EEST" name="tearDown" finished-at="2023-07-27T13:40:39 EEST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckLanguages -->
      <class name="SubscribeWithInvalidEmail">
        <test-method is-config="true" signature="setUp()[pri:0, instance:SubscribeWithInvalidEmail@1a482e36]" started-at="2023-07-27T13:41:41 EEST" name="setUp" finished-at="2023-07-27T13:41:51 EEST" duration-ms="10741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkSubscribeWithInvalidEmail()[pri:0, instance:SubscribeWithInvalidEmail@1a482e36]" started-at="2023-07-27T13:41:51 EEST" name="checkSubscribeWithInvalidEmail" finished-at="2023-07-27T13:41:51 EEST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSubscribeWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:SubscribeWithInvalidEmail@1a482e36]" started-at="2023-07-27T13:41:51 EEST" name="tearDown" finished-at="2023-07-27T13:41:52 EEST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SubscribeWithInvalidEmail -->
      <class name="CheckPopularProducts">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckPopularProducts@4efbca5a]" started-at="2023-07-27T13:40:39 EEST" name="setUp" finished-at="2023-07-27T13:40:47 EEST" duration-ms="8343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkPopularProducts()[pri:0, instance:CheckPopularProducts@4efbca5a]" started-at="2023-07-27T13:40:47 EEST" name="checkPopularProducts" finished-at="2023-07-27T13:40:48 EEST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPopularProducts -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CheckPopularProducts@4efbca5a]" started-at="2023-07-27T13:40:48 EEST" name="tearDown" finished-at="2023-07-27T13:40:48 EEST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckPopularProducts -->
      <class name="AddingToCart">
        <test-method is-config="true" signature="setUp()[pri:0, instance:AddingToCart@dd8ba08]" started-at="2023-07-27T13:39:49 EEST" name="setUp" finished-at="2023-07-27T13:40:02 EEST" duration-ms="13189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="addingToCart()[pri:0, instance:AddingToCart@dd8ba08]" started-at="2023-07-27T13:40:02 EEST" name="addingToCart" finished-at="2023-07-27T13:40:09 EEST" duration-ms="6285" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addingToCart -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:AddingToCart@dd8ba08]" started-at="2023-07-27T13:40:09 EEST" name="tearDown" finished-at="2023-07-27T13:40:09 EEST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- AddingToCart -->
      <class name="PriceDropCheck">
        <test-method is-config="true" signature="setUp()[pri:0, instance:PriceDropCheck@1b7cc17c]" started-at="2023-07-27T13:40:48 EEST" name="setUp" finished-at="2023-07-27T13:41:02 EEST" duration-ms="14399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="priceDropCheck()[pri:0, instance:PriceDropCheck@1b7cc17c]" started-at="2023-07-27T13:41:02 EEST" name="priceDropCheck" finished-at="2023-07-27T13:41:03 EEST" duration-ms="1015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- priceDropCheck -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:PriceDropCheck@1b7cc17c]" started-at="2023-07-27T13:41:03 EEST" name="tearDown" finished-at="2023-07-27T13:41:03 EEST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- PriceDropCheck -->
      <class name="RegistrationWithInvalidData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithInvalidData@59662a0b]" started-at="2023-07-27T13:41:03 EEST" name="setUp" finished-at="2023-07-27T13:41:15 EEST" duration-ms="11474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithInvalidData@59662a0b]" started-at="2023-07-27T13:41:15 EEST" name="registrationWithValidData" finished-at="2023-07-27T13:41:16 EEST" duration-ms="1653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RegistrationWithInvalidData@59662a0b]" started-at="2023-07-27T13:41:16 EEST" name="tearDown" finished-at="2023-07-27T13:41:17 EEST" duration-ms="145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithInvalidData -->
      <class name="RegistrationWithValidData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:RegistrationWithValidData@77fbd92c]" started-at="2023-07-27T13:41:17 EEST" name="setUp" finished-at="2023-07-27T13:41:24 EEST" duration-ms="7357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registrationWithValidData()[pri:0, instance:RegistrationWithValidData@77fbd92c]" started-at="2023-07-27T13:41:24 EEST" name="registrationWithValidData" finished-at="2023-07-27T13:41:26 EEST" duration-ms="2452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registrationWithValidData -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:RegistrationWithValidData@77fbd92c]" started-at="2023-07-27T13:41:26 EEST" name="tearDown" finished-at="2023-07-27T13:41:27 EEST" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- RegistrationWithValidData -->
      <class name="CheckCategories">
        <test-method is-config="true" signature="setUp()[pri:0, instance:CheckCategories@9597028]" started-at="2023-07-27T13:40:09 EEST" name="setUp" finished-at="2023-07-27T13:40:23 EEST" duration-ms="14181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkCategories()[pri:0, instance:CheckCategories@9597028]" started-at="2023-07-27T13:40:23 EEST" name="checkCategories" finished-at="2023-07-27T13:40:24 EEST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCategories -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:CheckCategories@9597028]" started-at="2023-07-27T13:40:24 EEST" name="tearDown" finished-at="2023-07-27T13:40:24 EEST" duration-ms="214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- CheckCategories -->
    </test> <!-- Test 1 -->
  </suite> <!-- Run all tests -->
</testng-results>
